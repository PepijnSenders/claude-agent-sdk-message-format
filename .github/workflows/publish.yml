name: Publish to npm

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build package
        run: bun run build

      - name: Check if version has changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view claude-pretty-printer version 2>/dev/null || echo "0.0.0")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "published-version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
          echo "Published version: $PUBLISHED_VERSION"

          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.should-publish == 'true'
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish (version already published)
        if: steps.version-check.outputs.should-publish == 'false'
        run: |
          echo "Version ${{ steps.version-check.outputs.current-version }} is already published"
          echo "Skipping npm publish"

      - name: Create GitHub Release
        if: steps.version-check.outputs.should-publish == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version-check.outputs.current-version }}
          name: Release v${{ steps.version-check.outputs.current-version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
